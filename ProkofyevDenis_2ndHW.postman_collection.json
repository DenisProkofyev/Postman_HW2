{
	"info": {
		"_postman_id": "e4afb39e-022f-43d9-9049-6e9dca13cff5",
		"name": "ProkofyevDenis_2ndHW",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13534259"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"/*1. Отправить запрос.\r",
							"#GET: http://162.55.220.72:5005/first\r",
							"\r",
							"2. Статус код 200\r",
							"#Status: 200 OK Time: 75 ms Size: 193 B\r",
							"\r",
							"3. Проверить, что в body приходит правильный string.\r",
							"#This is the first responce from server!*/\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"/*http://162.55.220.72:5005/user_info_3\r",
							"1. Отправить запрос.\r",
							"POST: http://162.55.220.72:5005/user_info_3\r",
							"name Denis\r",
							"age 32\r",
							"salary 1000\r",
							"\r",
							"2. Статус код 200\r",
							"# Status: 200 OK Time: 89 ms Size: 370 B\r",
							"\r",
							"3. Спарсить response body в json.*/\r",
							"const responseJson = pm.response.json()\r",
							"\r",
							"// 4. Проверить, что name в ответе равно name в request (name вбить руками.)\r",
							"pm.test(\"Name is Denis\", function() {\r",
							"    pm.expect(responseJson.name).to.eql(\"Denis\");\r",
							"})\r",
							"\r",
							"//5. Проверить, что age в ответе равно age в request (age вбить руками.)\r",
							"pm.test(\"Age is 32\", function() {\r",
							"    pm.expect(responseJson.age).to.eql(\"32\");\r",
							"})\r",
							"//6. Проверить, что salary в ответе равно salary в request (salary вбить руками.)\r",
							"pm.test(\"Salary is 1000\", function() {\r",
							"    pm.expect(responseJson.salary).to.eql(1000);\r",
							"})\r",
							"//7. Спарсить request.\r",
							"let req = request.data\r",
							"\r",
							"// 8. Проверить, что name в ответе равно name в request (name забрать из request.)\r",
							"pm.test(\"Name is Denis\", function() {\r",
							"    pm.expect(responseJson.name).to.eql(req.name);\r",
							"})\r",
							"\r",
							"//9. Проверить, что age в ответе равно age в request (age забрать из request.)\r",
							"pm.test(\"Age is 32\", function() {\r",
							"    pm.expect(responseJson.age).to.eql(req.age);\r",
							"})\r",
							"\r",
							"//10. Проверить, что salary в ответе равно salary в request (salary забрать из request.)\r",
							"pm.test(\"Salary is 1000\", function() {\r",
							"    pm.expect(Number(responseJson.salary)).to.eql(Number(req.salary));\r",
							"})\r",
							"\r",
							"//11. Вывести в консоль параметр family из response.\r",
							"console.log(responseJson.family)\r",
							"\r",
							"//12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"//let salary_1_5 = responseJson.family.u_salary_1_5_year\r",
							"//console.log(\"Salary 1,5\", salary_1_5)\r",
							"pm.test(\"u_salary_1_5_year is 4000\", function() {\r",
							"    pm.expect(responseJson.family.u_salary_1_5_year).to.eql(req.salary*4)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Denis",
							"type": "text"
						},
						{
							"key": "age",
							"value": "32",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/object_info_3\r",
							"//1. Отправить запрос.\r",
							"// GET: http://162.55.220.72:5005/object_info_3?name=Denis&age=32&salary=1000\r",
							"\r",
							"//2. Статус код 200\r",
							"// Status: 200 OK Time: 77 ms Size: 525 B\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"const responseJson = pm.response.json()\r",
							"\r",
							"//4. Спарсить request.\r",
							"const req_data = pm.request.url.query.toObject()\r",
							"\r",
							"//5. Проверить, что name в ответе равно name в request (name забрать из request.)\r",
							"pm.test(\"Name is Denis\", function() {\r",
							"    pm.expect(responseJson.name).to.eql(req_data.name);\r",
							"})\r",
							"//6. Проверить, что age в ответе равно age в request (age забрать из request.)\r",
							"pm.test(\"Age is 32\", function() {\r",
							"    pm.expect(responseJson.age).to.eql(req_data.age);\r",
							"})\r",
							"//7. Проверить, что salary в ответе равно salary в request (salary забрать из request.)\r",
							"pm.test(\"Salary is 1000\", function() {\r",
							"    pm.expect(+responseJson.salary).to.eql(Number(req_data.salary));\r",
							"})\r",
							"//8. Вывести в консоль параметр family из response.\r",
							"console.log(responseJson.family)\r",
							"\r",
							"//9. Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"Dog has a name\", function() {\r",
							"    pm.expect(responseJson.family.pets.dog).to.have.property(\"name\");\r",
							"})\r",
							"\r",
							"//10. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"Dog has an 'age' parameter\", function() {\r",
							"    pm.expect(responseJson.family.pets.dog).to.have.property(\"age\");\r",
							"})\r",
							"\r",
							"//11. Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"Dog's name is Luky\", function() {\r",
							"    pm.expect(responseJson.family.pets.dog.name).to.eql(\"Luky\");\r",
							"})\r",
							"\r",
							"//12. Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"Dog's age is 4\", function() {\r",
							"    pm.expect(responseJson.family.pets.dog.age).to.eql(4);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Denis&age=32&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Denis"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/object_info_4\r",
							"//1. Отправить запрос.\r",
							"// GET: http://162.55.220.72:5005/object_info_4?name=Denis&age=32&salary=1000\r",
							"\r",
							"//2. Статус код 200\r",
							"// Status: 200 OK Time: 82 ms Size: 37 B\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"let responseJson = pm.response.json()\r",
							"\r",
							"//4. Спарсить request.\r",
							"let req_data = pm.request.url.query.toObject()\r",
							"\r",
							"//5. Проверить, что name в ответе равно name в request (name забрать из request.)\r",
							"pm.test(\"Name is Denis\", function() {\r",
							"    pm.expect(responseJson.name).to.eql(req_data.name);\r",
							"})\r",
							"//6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"pm.test(\"Age is 32\", function() {\r",
							"    pm.expect(Number(responseJson.age)).to.eql(Number(req_data.age));\r",
							"})\r",
							"//7. Вывести в консоль параметр salary из request.\r",
							"console.log(req_data.salary)\r",
							"//8. Вывести в консоль параметр salary из response.\r",
							"console.log(responseJson.salary)\r",
							"//9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(responseJson.salary[0])\r",
							"//10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(responseJson.salary[1])\r",
							"//11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(responseJson.salary[2])\r",
							"//12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Salary is 1000\", function() {\r",
							"    pm.expect(Number(responseJson.salary[0])).to.eql(Number(req_data.salary));\r",
							"})\r",
							"//13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"Salary is 2000\", function() {\r",
							"    pm.expect(Number(responseJson.salary[1])).to.eql(Number(req_data.salary*2));\r",
							"})\r",
							"//14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"Salary is 3000\", function() {\r",
							"    pm.expect(Number(responseJson.salary[2])).to.eql(Number(req_data.salary*3));\r",
							"})\r",
							"//15. Создать в окружении переменную name\r",
							"//18. Передать в окружение переменную name\r",
							"pm.environment.set(\"name\", responseJson.name)\r",
							"\r",
							"//16. Создать в окружении переменную age\r",
							"//19. Передать в окружение переменную age\r",
							"pm.environment.set(\"age\", responseJson.age)\r",
							"\r",
							"//17. Создать в окружении переменную salary\r",
							"//20. Передать в окружение переменную salary\r",
							"pm.environment.set(\"salary\", responseJson.salary)\r",
							"\r",
							"//21. Написать цикл, который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"for (let i=0; i<responseJson.salary.length; i++) {\r",
							"    console.log(responseJson.salary[i])\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Denis&age=32&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Denis"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/user_info_2\r",
							"//1. Вставить параметр salary из окружения в request\r",
							"//{{name}}\r",
							"//2. Вставить параметр age из окружения в age\r",
							"//{{age}}\r",
							"//3. Вставить параметр name из окружения в name\r",
							"//{{salary}}\r",
							"//4. Отправить запрос.\r",
							"// POST: http://162.55.220.72:5005/user_info_2\r",
							"//5. Статус код 200\r",
							"//Status: 200 OK Time: 85 ms Size: 468 B\r",
							"\r",
							"//6. Спарсить response body в json.\r",
							"let responseJson = pm.response.json()\r",
							"\r",
							"//7. Спарсить request.\r",
							"let req = request.data\r",
							"\r",
							"//8. Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"Response has a 'start_qa_salary' parameter\", function() {\r",
							"    pm.expect(responseJson).to.have.property('start_qa_salary');\r",
							"})\r",
							"//9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"Response has a 'qa_salary_after_6_months' parameter\", function() {\r",
							"    pm.expect(responseJson).to.have.property('qa_salary_after_6_months');\r",
							"})\r",
							"//10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"Response has a 'qa_salary_after_12_months' parameter\", function() {\r",
							"    pm.expect(responseJson).to.have.property('qa_salary_after_12_months');\r",
							"})\r",
							"//11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test(\"Response has a 'qa_salary_after_1.5_year' parameter\", function() {\r",
							"    pm.expect(responseJson).to.have.property('qa_salary_after_1.5_year');\r",
							"})\r",
							"//12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test(\"Response has a 'qa_salary_after_3.5_years' parameter\", function() {\r",
							"    pm.expect(responseJson).to.have.property('qa_salary_after_3.5_years');\r",
							"})\r",
							"//13. Проверить, что json response имеет параметр person\r",
							"pm.test(\"Response has a 'person' parameter\", function() {\r",
							"    pm.expect(responseJson).to.have.property('person');\r",
							"})\r",
							"//14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"start_qa_salary is 1000\", function() {\r",
							"    pm.expect(+responseJson.start_qa_salary).to.eql(+req.salary);\r",
							"})\r",
							"\r",
							"//15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_6_months is salary*2\", function() {\r",
							"    pm.expect(responseJson.qa_salary_after_6_months).to.eql(req.salary*2);\r",
							"})\r",
							"//16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_12_months is salary*2.7\", function() {\r",
							"    pm.expect(responseJson.qa_salary_after_12_months).to.eql(req.salary*2.7);\r",
							"})\r",
							"//17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_1.5_year is salary*3.3\", function() {\r",
							"    pm.expect(responseJson['qa_salary_after_1.5_year']).to.eql(req.salary*3.3);\r",
							"})\r",
							"//18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_3.5_years is salary*3.8\", function() {\r",
							"    pm.expect(responseJson['qa_salary_after_3.5_years']).to.eql(req.salary*3.8);\r",
							"})\r",
							"//19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test(\"u_name[1] is salary\", function() {\r",
							"    pm.expect(+responseJson.person.u_name[1]).to.eql(Number(req.salary));\r",
							"})\r",
							"//20. Проверить, что параметр u_age равен age из request (age забрать из request.)\r",
							"pm.test(\"u_age is req.age\", function() {\r",
							"    pm.expect(+responseJson.person.u_age).to.eql(Number(req.age));\r",
							"})\r",
							"//21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test(\"u_salary_5_years is salary*4.2\", function() {\r",
							"    pm.expect(+responseJson.person.u_salary_5_years).to.eql(Number(req.salary*4.2));\r",
							"})\r",
							"//22. ***Написать цикл, который выведет в консоль по порядку элементы списка из параметра person.\r",
							"for (var element in responseJson.person) {\r",
							"    console.log(\"Person: \" + element + \" = \" + responseJson.person[element])\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}